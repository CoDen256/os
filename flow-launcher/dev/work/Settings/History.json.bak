{
  "Items": [
    {
      "Query": "Symbolik link with run as admin",
      "ExecutedDateTime": "2024-01-19T19:10:56.0230103+01:00"
    },
    {
      "Query": "\u0060 scoop which ahk",
      "ExecutedDateTime": "2024-01-19T19:12:31.1279333+01:00"
    },
    {
      "Query": "s C:\\ProgramData\\scoop\\apps\\autohotkey\\current\\UX\\",
      "ExecutedDateTime": "2024-01-19T19:12:47.2243517+01:00"
    },
    {
      "Query": "!",
      "ExecutedDateTime": "2024-01-19T19:13:53.9906184+01:00"
    },
    {
      "Query": "s C:\\ProgramData\\scoop\\apps\\autohotkey\\current\\UX",
      "ExecutedDateTime": "2024-01-19T19:14:01.6485874+01:00"
    },
    {
      "Query": "run as admin by default win 11",
      "ExecutedDateTime": "2024-01-19T19:15:38.1345339+01:00"
    },
    {
      "Query": "run as admin on startup",
      "ExecutedDateTime": "2024-01-19T19:18:49.4215187+01:00"
    },
    {
      "Query": "{",
      "ExecutedDateTime": "2024-01-19T19:19:49.6223568+01:00"
    },
    {
      "Query": "ter",
      "ExecutedDateTime": "2024-01-19T19:22:54.8878246+01:00"
    },
    {
      "Query": "{",
      "ExecutedDateTime": "2024-01-19T19:23:13.3113992+01:00"
    },
    {
      "Query": "ter",
      "ExecutedDateTime": "2024-01-19T19:24:14.1625609+01:00"
    },
    {
      "Query": "sett",
      "ExecutedDateTime": "2024-01-19T19:24:59.0802809+01:00"
    },
    {
      "Query": "is dll immutable",
      "ExecutedDateTime": "2024-01-19T19:29:53.7143789+01:00"
    },
    {
      "Query": "!",
      "ExecutedDateTime": "2024-01-19T19:31:32.8875042+01:00"
    },
    {
      "Query": "pm install clip",
      "ExecutedDateTime": "2024-01-19T19:32:06.2462565+01:00"
    },
    {
      "Query": "git ignore mul",
      "ExecutedDateTime": "2024-01-19T19:32:35.0955043+01:00"
    },
    {
      "Query": "toolb",
      "ExecutedDateTime": "2024-01-19T19:36:17.2568613+01:00"
    },
    {
      "Query": "add build tools android to path",
      "ExecutedDateTime": "2024-01-19T19:37:45.7062536+01:00"
    },
    {
      "Query": "sett",
      "ExecutedDateTime": "2024-01-19T19:38:47.9422077+01:00"
    },
    {
      "Query": "\u0060 scoop uninstall  android-clt",
      "ExecutedDateTime": "2024-01-19T19:39:05.9858599+01:00"
    },
    {
      "Query": "\u0060 pathed /append $(dir \u0022$($env:USERPROFILE)\\tools\\android\\sdk\\build-tools\\*\u0022).FullName /user",
      "ExecutedDateTime": "2024-01-19T19:39:54.7852237+01:00"
    },
    {
      "Query": "\u0060 pathed /append $(dir \u0022$($env:USERPROFILE)\\android\\sdk\\build-tools\\*\u0022).FullName /user",
      "ExecutedDateTime": "2024-01-19T19:40:08.1097735+01:00"
    },
    {
      "Query": "sett",
      "ExecutedDateTime": "2024-01-19T19:41:04.5775055+01:00"
    },
    {
      "Query": "\u0060 nvm list",
      "ExecutedDateTime": "2024-01-19T19:41:21.5375576+01:00"
    },
    {
      "Query": "sett",
      "ExecutedDateTime": "2024-01-19T19:41:31.098085+01:00"
    },
    {
      "Query": "\u0060",
      "ExecutedDateTime": "2024-01-19T19:41:47.5242227+01:00"
    },
    {
      "Query": "set",
      "ExecutedDateTime": "2024-01-19T19:41:50.4077483+01:00"
    },
    {
      "Query": "\u0060",
      "ExecutedDateTime": "2024-01-19T19:42:05.2483501+01:00"
    },
    {
      "Query": "\u0060 gtools-which aapt",
      "ExecutedDateTime": "2024-01-19T19:44:38.026773+01:00"
    },
    {
      "Query": "\u0060 scoop list",
      "ExecutedDateTime": "2024-01-19T19:46:31.3969933+01:00"
    },
    {
      "Query": "netf",
      "ExecutedDateTime": "2024-01-19T19:46:53.3727789+01:00"
    },
    {
      "Query": "black mirror staffel 6",
      "ExecutedDateTime": "2024-01-19T19:47:29.5637843+01:00"
    },
    {
      "Query": "black mirror latest",
      "ExecutedDateTime": "2024-01-19T19:47:45.1881145+01:00"
    },
    {
      "Query": "edge",
      "ExecutedDateTime": "2024-01-19T19:48:23.810389+01:00"
    },
    {
      "Query": "set",
      "ExecutedDateTime": "2024-01-19T19:50:26.6727157+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-01-19T19:51:17.5693733+01:00"
    },
    {
      "Query": "postm",
      "ExecutedDateTime": "2024-01-19T19:51:24.5373148+01:00"
    },
    {
      "Query": "log o",
      "ExecutedDateTime": "2024-01-19T19:53:12.9148526+01:00"
    },
    {
      "Query": "edge",
      "ExecutedDateTime": "2024-01-19T23:34:02.0529201+01:00"
    },
    {
      "Query": "disable steam service for other users",
      "ExecutedDateTime": "2024-01-20T13:23:30.3755797+01:00"
    },
    {
      "Query": "auto",
      "ExecutedDateTime": "2024-01-20T13:23:55.3302943+01:00"
    },
    {
      "Query": "netf",
      "ExecutedDateTime": "2024-01-20T13:25:16.0191889+01:00"
    },
    {
      "Query": "edge",
      "ExecutedDateTime": "2024-01-21T11:54:56.7535591+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-01-22T09:43:23.0330906+01:00"
    },
    {
      "Query": "slack",
      "ExecutedDateTime": "2024-01-22T09:43:27.1204524+01:00"
    },
    {
      "Query": "chrom",
      "ExecutedDateTime": "2024-01-22T09:45:32.2213335+01:00"
    },
    {
      "Query": "}",
      "ExecutedDateTime": "2024-01-22T09:45:41.4974018+01:00"
    },
    {
      "Query": "postma",
      "ExecutedDateTime": "2024-01-22T09:48:31.0095556+01:00"
    },
    {
      "Query": "postmaa",
      "ExecutedDateTime": "2024-01-22T10:01:44.3963563+01:00"
    },
    {
      "Query": "aggregated nominations britned mns",
      "ExecutedDateTime": "2024-01-22T10:02:14.5933124+01:00"
    },
    {
      "Query": "hashset vs arralist",
      "ExecutedDateTime": "2024-01-22T10:23:15.5419872+01:00"
    },
    {
      "Query": "shar",
      "ExecutedDateTime": "2024-01-22T10:31:27.2511959+01:00"
    },
    {
      "Query": "jet",
      "ExecutedDateTime": "2024-01-22T11:11:25.6401759+01:00"
    },
    {
      "Query": "runner icon",
      "ExecutedDateTime": "2024-01-22T11:42:11.0685332+01:00"
    },
    {
      "Query": "}",
      "ExecutedDateTime": "2024-01-22T11:46:36.1433977+01:00"
    },
    {
      "Query": "kotlin package pr",
      "ExecutedDateTime": "2024-01-22T11:59:45.3356662+01:00"
    },
    {
      "Query": "inte",
      "ExecutedDateTime": "2024-01-22T16:17:04.1390859+01:00"
    },
    {
      "Query": "logo",
      "ExecutedDateTime": "2024-01-22T16:20:31.7164159+01:00"
    },
    {
      "Query": "restar",
      "ExecutedDateTime": "2024-01-22T16:22:02.4523742+01:00"
    },
    {
      "Query": "post",
      "ExecutedDateTime": "2024-01-22T16:46:13.9588251+01:00"
    },
    {
      "Query": "gi",
      "ExecutedDateTime": "2024-01-22T17:20:02.8233959+01:00"
    },
    {
      "Query": "ed",
      "ExecutedDateTime": "2024-01-22T20:47:44.7885416+01:00"
    },
    {
      "Query": "st",
      "ExecutedDateTime": "2024-01-22T21:39:02.178948+01:00"
    },
    {
      "Query": "st p",
      "ExecutedDateTime": "2024-01-23T22:01:23.4861926+01:00"
    },
    {
      "Query": "noti",
      "ExecutedDateTime": "2024-01-24T20:16:22.2863042+01:00"
    },
    {
      "Query": "disc",
      "ExecutedDateTime": "2024-01-28T20:25:28.0143915+01:00"
    },
    {
      "Query": "ed",
      "ExecutedDateTime": "2024-01-28T22:57:26.5317696+01:00"
    },
    {
      "Query": "restar",
      "ExecutedDateTime": "2024-01-29T09:00:18.1002672+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-01-29T09:02:42.7562028+01:00"
    },
    {
      "Query": "slack",
      "ExecutedDateTime": "2024-01-29T09:02:47.8820252+01:00"
    },
    {
      "Query": "chrome",
      "ExecutedDateTime": "2024-01-29T09:03:28.0955083+01:00"
    },
    {
      "Query": "! vimium download",
      "ExecutedDateTime": "2024-01-29T09:04:42.3765441+01:00"
    },
    {
      "Query": "vimium",
      "ExecutedDateTime": "2024-01-29T09:05:11.8765827+01:00"
    },
    {
      "Query": "fl",
      "ExecutedDateTime": "2024-01-29T09:05:20.8586264+01:00"
    },
    {
      "Query": "vimium chrom",
      "ExecutedDateTime": "2024-01-29T09:09:05.7670569+01:00"
    },
    {
      "Query": "}",
      "ExecutedDateTime": "2024-01-29T09:09:26.5636501+01:00"
    },
    {
      "Query": "\u0060",
      "ExecutedDateTime": "2024-01-29T09:10:31.7646579+01:00"
    },
    {
      "Query": "armoury remove",
      "ExecutedDateTime": "2024-01-29T09:13:02.3512343+01:00"
    },
    {
      "Query": "Your browser does not run web extensions like Vimium on certain pages, usually for security reasons.",
      "ExecutedDateTime": "2024-01-29T09:16:11.911476+01:00"
    },
    {
      "Query": "edge",
      "ExecutedDateTime": "2024-01-29T09:16:55.9042495+01:00"
    },
    {
      "Query": "calendar",
      "ExecutedDateTime": "2024-01-29T09:20:15.7783327+01:00"
    },
    {
      "Query": "sla",
      "ExecutedDateTime": "2024-01-29T09:20:51.3259374+01:00"
    },
    {
      "Query": "personalize",
      "ExecutedDateTime": "2024-01-29T09:23:24.9924204+01:00"
    },
    {
      "Query": "\u0060",
      "ExecutedDateTime": "2024-01-29T09:28:35.413605+01:00"
    },
    {
      "Query": "{",
      "ExecutedDateTime": "2024-01-29T09:28:56.1739495+01:00"
    },
    {
      "Query": "edit properties to run as admin via cmd",
      "ExecutedDateTime": "2024-01-29T09:36:43.2319687+01:00"
    },
    {
      "Query": "tree",
      "ExecutedDateTime": "2024-01-29T09:38:54.887123+01:00"
    },
    {
      "Query": "pagefile.sys too",
      "ExecutedDateTime": "2024-01-29T09:39:38.5418121+01:00"
    },
    {
      "Query": "un uni",
      "ExecutedDateTime": "2024-01-29T09:40:38.6602833+01:00"
    },
    {
      "Query": "scoop remove cache",
      "ExecutedDateTime": "2024-01-29T09:43:41.3794645+01:00"
    },
    {
      "Query": "\u0060 coop cache rm *",
      "ExecutedDateTime": "2024-01-29T09:43:56.3167579+01:00"
    },
    {
      "Query": "\u0060 scoop cache rm * -g",
      "ExecutedDateTime": "2024-01-29T09:44:13.2053072+01:00"
    },
    {
      "Query": "vs code force push",
      "ExecutedDateTime": "2024-01-29T09:53:50.1851868+01:00"
    },
    {
      "Query": "\u0060 scoop install autohotkey",
      "ExecutedDateTime": "2024-01-29T10:01:48.1688735+01:00"
    },
    {
      "Query": "run slack on startup",
      "ExecutedDateTime": "2024-01-29T10:09:07.1947633+01:00"
    },
    {
      "Query": "{",
      "ExecutedDateTime": "2024-01-29T10:12:05.7113212+01:00"
    },
    {
      "Query": "bra",
      "ExecutedDateTime": "2024-01-29T10:20:48.9883161+01:00"
    },
    {
      "Query": "1638 uah to euro",
      "ExecutedDateTime": "2024-01-29T11:43:36.7830859+01:00"
    },
    {
      "Query": "w\u00E4rmi",
      "ExecutedDateTime": "2024-01-29T16:48:30.4497445+01:00"
    },
    {
      "Query": "bra",
      "ExecutedDateTime": "2024-01-29T16:59:35.2413844+01:00"
    },
    {
      "Query": "ed",
      "ExecutedDateTime": "2024-01-29T18:33:10.5694709+01:00"
    },
    {
      "Query": "bra",
      "ExecutedDateTime": "2024-01-29T19:32:35.7414508+01:00"
    },
    {
      "Query": "ter",
      "ExecutedDateTime": "2024-01-30T21:47:35.8020416+01:00"
    },
    {
      "Query": "{",
      "ExecutedDateTime": "2024-01-30T21:48:35.1558894+01:00"
    },
    {
      "Query": "docker",
      "ExecutedDateTime": "2024-01-30T21:48:59.2036779+01:00"
    },
    {
      "Query": "docker desktop without",
      "ExecutedDateTime": "2024-01-30T21:50:29.7962067+01:00"
    },
    {
      "Query": "inializing backed api",
      "ExecutedDateTime": "2024-01-30T22:01:38.4067215+01:00"
    },
    {
      "Query": "docker",
      "ExecutedDateTime": "2024-01-30T22:02:29.3423428+01:00"
    },
    {
      "Query": "initializatin backend api access denied docker",
      "ExecutedDateTime": "2024-01-30T22:02:58.9786377+01:00"
    },
    {
      "Query": "htwk m",
      "ExecutedDateTime": "2024-01-31T17:14:58.3164158+01:00"
    },
    {
      "Query": "htwk modu",
      "ExecutedDateTime": "2024-01-31T17:15:00.1435659+01:00"
    },
    {
      "Query": "not",
      "ExecutedDateTime": "2024-01-31T17:15:17.8190493+01:00"
    },
    {
      "Query": "ane",
      "ExecutedDateTime": "2024-01-31T17:17:42.3308089+01:00"
    },
    {
      "Query": "resta",
      "ExecutedDateTime": "2024-01-31T17:45:16.4856111+01:00"
    },
    {
      "Query": "telegram github",
      "ExecutedDateTime": "2024-01-31T20:27:59.8669911+01:00"
    },
    {
      "Query": "Failed to read key main from store  algori",
      "ExecutedDateTime": "2024-01-31T20:52:02.413106+01:00"
    },
    {
      "Query": "visua",
      "ExecutedDateTime": "2024-01-31T21:20:31.7313189+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-01-31T22:08:41.7433715+01:00"
    },
    {
      "Query": "obsi",
      "ExecutedDateTime": "2024-01-31T22:08:45.4870123+01:00"
    },
    {
      "Query": "ter",
      "ExecutedDateTime": "2024-01-31T22:11:32.6806498+01:00"
    },
    {
      "Query": "dex2ja",
      "ExecutedDateTime": "2024-01-31T22:47:18.4148804+01:00"
    },
    {
      "Query": "idea light edit",
      "ExecutedDateTime": "2024-01-31T22:48:26.8875847+01:00"
    },
    {
      "Query": "idea search in jar as well",
      "ExecutedDateTime": "2024-01-31T22:58:27.3676889+01:00"
    },
    {
      "Query": "extract jar intellij",
      "ExecutedDateTime": "2024-01-31T22:59:09.3785218+01:00"
    },
    {
      "Query": "java base64 decode",
      "ExecutedDateTime": "2024-01-31T23:02:19.4641905+01:00"
    },
    {
      "Query": "base64 android",
      "ExecutedDateTime": "2024-01-31T23:02:55.1631116+01:00"
    },
    {
      "Query": "andro",
      "ExecutedDateTime": "2024-01-31T23:04:11.878241+01:00"
    },
    {
      "Query": "shut",
      "ExecutedDateTime": "2024-01-31T23:13:32.7212484+01:00"
    },
    {
      "Query": "Module entity with name: should be available",
      "ExecutedDateTime": "2024-02-01T10:08:19.4025749+01:00"
    },
    {
      "Query": "shutd",
      "ExecutedDateTime": "2024-02-01T10:30:11.0752128+01:00"
    },
    {
      "Query": "andr",
      "ExecutedDateTime": "2024-02-01T19:03:39.4354806+01:00"
    },
    {
      "Query": "java string permutation library",
      "ExecutedDateTime": "2024-02-01T19:35:26.1098335+01:00"
    },
    {
      "Query": "java process in parallel",
      "ExecutedDateTime": "2024-02-01T19:56:08.5050163+01:00"
    },
    {
      "Query": "print format java max characters size",
      "ExecutedDateTime": "2024-02-01T20:44:02.6985489+01:00"
    },
    {
      "Query": "print format with nulls filler",
      "ExecutedDateTime": "2024-02-01T20:46:15.6577557+01:00"
    },
    {
      "Query": "ter",
      "ExecutedDateTime": "2024-02-01T21:14:42.9688058+01:00"
    },
    {
      "Query": "disassemble .so file",
      "ExecutedDateTime": "2024-02-01T21:23:05.1728662+01:00"
    },
    {
      "Query": "online disassembler",
      "ExecutedDateTime": "2024-02-01T21:24:38.8549421+01:00"
    },
    {
      "Query": "online disassembler .so",
      "ExecutedDateTime": "2024-02-01T21:26:00.5292765+01:00"
    },
    {
      "Query": "cpp support intellij",
      "ExecutedDateTime": "2024-02-01T21:28:32.3477207+01:00"
    },
    {
      "Query": "java native method",
      "ExecutedDateTime": "2024-02-01T21:33:11.8509943+01:00"
    },
    {
      "Query": "\u0060 scoop install mingw",
      "ExecutedDateTime": "2024-02-01T21:36:26.9452606+01:00"
    },
    {
      "Query": "error: \u0027JNIEXPORT\u0027 does not name a type",
      "ExecutedDateTime": "2024-02-01T21:42:38.935613+01:00"
    },
    {
      "Query": "cpp include std",
      "ExecutedDateTime": "2024-02-01T21:44:29.4137154+01:00"
    },
    {
      "Query": "jni.h no such file or directory",
      "ExecutedDateTime": "2024-02-01T21:45:51.1636896+01:00"
    },
    {
      "Query": "jni.h: No such file or directory",
      "ExecutedDateTime": "2024-02-01T21:48:21.7830677+01:00"
    },
    {
      "Query": "add jni path",
      "ExecutedDateTime": "2024-02-01T21:48:45.7387285+01:00"
    },
    {
      "Query": "intellij jni",
      "ExecutedDateTime": "2024-02-01T21:50:05.1196256+01:00"
    },
    {
      "Query": "undefined reference to \u0060std::cout\u0027",
      "ExecutedDateTime": "2024-02-01T21:51:13.2064086+01:00"
    },
    {
      "Query": "\u0027cout\u0027 is not a member of \u0027std\u0027",
      "ExecutedDateTime": "2024-02-01T21:51:50.1236485+01:00"
    },
    {
      "Query": "undefined reference to \u0060WinMain\u0027",
      "ExecutedDateTime": "2024-02-01T21:52:19.0100243+01:00"
    },
    {
      "Query": "collect2.exe: error: ld returned 1 exit status",
      "ExecutedDateTime": "2024-02-01T21:53:44.907109+01:00"
    },
    {
      "Query": "undefined reference to \u0060WinMain\u0027",
      "ExecutedDateTime": "2024-02-01T21:54:14.2869686+01:00"
    },
    {
      "Query": "disassemble online .so",
      "ExecutedDateTime": "2024-02-01T21:57:50.9964614+01:00"
    },
    {
      "Query": "cpp online",
      "ExecutedDateTime": "2024-02-01T22:02:37.1348596+01:00"
    },
    {
      "Query": "5uLL meaning cpp",
      "ExecutedDateTime": "2024-02-01T22:08:05.0266519+01:00"
    },
    {
      "Query": "strcmp c",
      "ExecutedDateTime": "2024-02-01T22:10:02.4586605+01:00"
    },
    {
      "Query": "SecretKeySpec",
      "ExecutedDateTime": "2024-02-01T22:40:30.9142109+01:00"
    },
    {
      "Query": "java to hex and from hex",
      "ExecutedDateTime": "2024-02-01T22:59:04.8484632+01:00"
    },
    {
      "Query": "integer from hex string",
      "ExecutedDateTime": "2024-02-01T23:12:46.8936917+01:00"
    },
    {
      "Query": "shu",
      "ExecutedDateTime": "2024-02-01T23:16:19.5529108+01:00"
    },
    {
      "Query": "shut",
      "ExecutedDateTime": "2024-02-02T09:06:55.6409322+01:00"
    },
    {
      "Query": "einen Integrationskurs nach \u00A7 43",
      "ExecutedDateTime": "2024-02-04T00:03:59.5187731+01:00"
    },
    {
      "Query": "mietvertag",
      "ExecutedDateTime": "2024-02-04T00:25:16.3948791+01:00"
    },
    {
      "Query": "flixbus",
      "ExecutedDateTime": "2024-02-05T20:20:58.6341108+01:00"
    },
    {
      "Query": "injektiv vs",
      "ExecutedDateTime": "2024-02-05T21:25:58.6129682+01:00"
    },
    {
      "Query": "hamiltonkreis vs eulerkrei",
      "ExecutedDateTime": "2024-02-05T21:56:35.8614603+01:00"
    },
    {
      "Query": "}",
      "ExecutedDateTime": "2024-02-05T22:00:49.9642529+01:00"
    },
    {
      "Query": "4096*4",
      "ExecutedDateTime": "2024-02-05T22:05:10.5400619+01:00"
    },
    {
      "Query": "4096*5",
      "ExecutedDateTime": "2024-02-05T22:05:21.1310911+01:00"
    },
    {
      "Query": "155 byte java",
      "ExecutedDateTime": "2024-02-05T22:06:03.1035536+01:00"
    },
    {
      "Query": "tohexstring java",
      "ExecutedDateTime": "2024-02-05T22:13:18.6384312+01:00"
    },
    {
      "Query": "java repeat strin",
      "ExecutedDateTime": "2024-02-05T22:39:48.311077+01:00"
    },
    {
      "Query": "md5 length",
      "ExecutedDateTime": "2024-02-05T22:50:26.5909081+01:00"
    },
    {
      "Query": "}",
      "ExecutedDateTime": "2024-02-05T23:05:46.6295711+01:00"
    },
    {
      "Query": "java is alphanumeric",
      "ExecutedDateTime": "2024-02-05T23:10:42.2536694+01:00"
    },
    {
      "Query": "}",
      "ExecutedDateTime": "2024-02-07T00:04:15.0076639+01:00"
    },
    {
      "Query": "ter",
      "ExecutedDateTime": "2024-02-07T00:07:46.1925577+01:00"
    },
    {
      "Query": "shu",
      "ExecutedDateTime": "2024-02-07T00:48:01.2660997+01:00"
    },
    {
      "Query": "lvb streik",
      "ExecutedDateTime": "2024-02-07T12:16:47.4663063+01:00"
    },
    {
      "Query": "tool",
      "ExecutedDateTime": "2024-02-08T23:31:16.7461227+01:00"
    },
    {
      "Query": "an",
      "ExecutedDateTime": "2024-02-08T23:32:03.2134762+01:00"
    },
    {
      "Query": "java.io.IOException: Cleartext HTTP traffic to not permitted",
      "ExecutedDateTime": "2024-02-08T23:49:10.9273966+01:00"
    },
    {
      "Query": "inte",
      "ExecutedDateTime": "2024-02-08T23:49:47.0967587+01:00"
    },
    {
      "Query": "android.os.NetworkOnMainThreadException",
      "ExecutedDateTime": "2024-02-08T23:52:02.5445741+01:00"
    },
    {
      "Query": "bra",
      "ExecutedDateTime": "2024-02-08T23:59:45.1149563+01:00"
    },
    {
      "Query": "inte",
      "ExecutedDateTime": "2024-02-09T00:05:56.5084145+01:00"
    },
    {
      "Query": "freelance websites",
      "ExecutedDateTime": "2024-02-09T00:13:40.167356+01:00"
    },
    {
      "Query": "Upwork",
      "ExecutedDateTime": "2024-02-09T00:14:25.1119484+01:00"
    },
    {
      "Query": "gmail",
      "ExecutedDateTime": "2024-02-09T00:16:21.0546268+01:00"
    },
    {
      "Query": "ckeckup",
      "ExecutedDateTime": "2024-02-09T00:18:47.9950211+01:00"
    },
    {
      "Query": "chatgp",
      "ExecutedDateTime": "2024-02-09T00:26:08.9463867+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-02-09T00:31:26.7783634+01:00"
    },
    {
      "Query": "slack",
      "ExecutedDateTime": "2024-02-09T00:31:28.5921194+01:00"
    },
    {
      "Query": "https://ca.slack-edge.com/T8B8WJ5FG-U016L6N96CT-a7aac104e427-512",
      "ExecutedDateTime": "2024-02-09T00:32:02.5335961+01:00"
    },
    {
      "Query": "anon freelance platforms reddit",
      "ExecutedDateTime": "2024-02-09T00:34:40.5814493+01:00"
    },
    {
      "Query": "scribd cancel subscription",
      "ExecutedDateTime": "2024-02-11T12:41:06.5238845+01:00"
    },
    {
      "Query": "lexikalische vs syntaktische analyse",
      "ExecutedDateTime": "2024-02-11T14:42:18.6664926+01:00"
    },
    {
      "Query": "edg",
      "ExecutedDateTime": "2024-02-11T21:30:52.1668031+01:00"
    },
    {
      "Query": "inte",
      "ExecutedDateTime": "2024-02-12T21:00:46.5949241+01:00"
    },
    {
      "Query": "}",
      "ExecutedDateTime": "2024-02-13T10:34:21.5781207+01:00"
    },
    {
      "Query": "draw",
      "ExecutedDateTime": "2024-02-13T10:43:43.7404398+01:00"
    },
    {
      "Query": "md h1",
      "ExecutedDateTime": "2024-02-13T11:06:04.7951137+01:00"
    },
    {
      "Query": "markdown h1",
      "ExecutedDateTime": "2024-02-13T11:06:10.2202211+01:00"
    },
    {
      "Query": "declaration vs definition vs in",
      "ExecutedDateTime": "2024-02-13T11:06:49.0289837+01:00"
    },
    {
      "Query": "div markdown",
      "ExecutedDateTime": "2024-02-13T12:25:40.113289+01:00"
    },
    {
      "Query": "div line markdown",
      "ExecutedDateTime": "2024-02-13T12:25:45.8425517+01:00"
    },
    {
      "Query": "markdown quote",
      "ExecutedDateTime": "2024-02-13T12:26:05.5961371+01:00"
    },
    {
      "Query": "draw.io",
      "ExecutedDateTime": "2024-02-13T12:38:01.6891018+01:00"
    },
    {
      "Query": "markdown pluses and minuses",
      "ExecutedDateTime": "2024-02-13T12:55:55.2458617+01:00"
    },
    {
      "Query": "inte",
      "ExecutedDateTime": "2024-02-13T21:25:24.7848782+01:00"
    },
    {
      "Query": "No matching tests found in any candidate test task.",
      "ExecutedDateTime": "2024-02-13T21:45:48.593978+01:00"
    },
    {
      "Query": "jupiter junit package without name",
      "ExecutedDateTime": "2024-02-13T21:48:21.6567421+01:00"
    },
    {
      "Query": "No matching tests found in any candidate test task",
      "ExecutedDateTime": "2024-02-13T21:52:12.6200754+01:00"
    },
    {
      "Query": "jetbrains academy gradle jupiter",
      "ExecutedDateTime": "2024-02-13T21:55:42.0226292+01:00"
    },
    {
      "Query": "12\u002B6.5\u002B9",
      "ExecutedDateTime": "2024-02-14T00:26:49.4809822+01:00"
    },
    {
      "Query": "inte",
      "ExecutedDateTime": "2024-02-14T20:51:56.7502395+01:00"
    },
    {
      "Query": "test generation javca junit",
      "ExecutedDateTime": "2024-02-14T20:59:29.6645724+01:00"
    },
    {
      "Query": "parametrized test junit not resolved",
      "ExecutedDateTime": "2024-02-14T21:02:22.7050269+01:00"
    },
    {
      "Query": "java reflection",
      "ExecutedDateTime": "2024-02-14T21:15:40.0631508+01:00"
    },
    {
      "Query": "toys b",
      "ExecutedDateTime": "2024-02-14T21:29:49.0705138+01:00"
    },
    {
      "Query": "sett",
      "ExecutedDateTime": "2024-02-14T21:29:56.9029894+01:00"
    },
    {
      "Query": "pm install Base64",
      "ExecutedDateTime": "2024-02-14T21:30:08.3119523+01:00"
    },
    {
      "Query": "settin",
      "ExecutedDateTime": "2024-02-14T21:30:20.6215853+01:00"
    },
    {
      "Query": "java reflection get field value without object",
      "ExecutedDateTime": "2024-02-14T21:38:39.9746478+01:00"
    },
    {
      "Query": "b runtime",
      "ExecutedDateTime": "2024-02-14T22:10:53.1773891+01:00"
    },
    {
      "Query": "b var2",
      "ExecutedDateTime": "2024-02-14T22:17:31.2823424+01:00"
    },
    {
      "Query": "b compile",
      "ExecutedDateTime": "2024-02-14T22:19:32.1978918+01:00"
    },
    {
      "Query": "inte",
      "ExecutedDateTime": "2024-02-14T22:24:50.1466733+01:00"
    },
    {
      "Query": "jvm is virtual cpu",
      "ExecutedDateTime": "2024-02-14T22:39:02.9281964+01:00"
    },
    {
      "Query": "python interpreter",
      "ExecutedDateTime": "2024-02-14T23:04:29.0455384+01:00"
    },
    {
      "Query": "b 3",
      "ExecutedDateTime": "2024-02-14T23:09:25.7158281+01:00"
    },
    {
      "Query": "b 5",
      "ExecutedDateTime": "2024-02-14T23:09:38.9783431+01:00"
    },
    {
      "Query": "b 4",
      "ExecutedDateTime": "2024-02-14T23:09:47.2380625+01:00"
    },
    {
      "Query": "b 2",
      "ExecutedDateTime": "2024-02-14T23:09:55.0119021+01:00"
    },
    {
      "Query": "b 1",
      "ExecutedDateTime": "2024-02-14T23:10:59.6943599+01:00"
    },
    {
      "Query": "b 2",
      "ExecutedDateTime": "2024-02-14T23:11:11.2191858+01:00"
    },
    {
      "Query": "b 1",
      "ExecutedDateTime": "2024-02-14T23:11:30.4307879+01:00"
    },
    {
      "Query": "b 2,4",
      "ExecutedDateTime": "2024-02-14T23:12:10.8852919+01:00"
    },
    {
      "Query": "b 4",
      "ExecutedDateTime": "2024-02-14T23:12:55.2815832+01:00"
    },
    {
      "Query": "deutsche b\u00FCrgerschaft wie lange",
      "ExecutedDateTime": "2024-02-15T08:45:13.2434536+01:00"
    },
    {
      "Query": "sharex",
      "ExecutedDateTime": "2024-02-15T08:49:38.701364+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-02-15T08:49:43.5996756+01:00"
    },
    {
      "Query": "share",
      "ExecutedDateTime": "2024-02-15T08:49:46.1536837+01:00"
    },
    {
      "Query": "\u0441\u0442\u0430\u0442\u0442\u044F 10 \u043F\u0440\u043E \u043E\u0441",
      "ExecutedDateTime": "2024-02-15T08:50:57.7762914+01:00"
    },
    {
      "Query": "\u0437\u0430\u043A\u043E\u043D \u043F\u0440\u043E \u043C\u043E\u0431\u0456\u043B\u0456\u0437\u0430\u0446\u0456\u044E \u0441\u0442\u0443\u0434\u0435\u043D\u0442\u0456\u0432",
      "ExecutedDateTime": "2024-02-15T08:52:12.3612367+01:00"
    },
    {
      "Query": "10449",
      "ExecutedDateTime": "2024-02-15T08:55:22.2280423+01:00"
    },
    {
      "Query": "\u041F\u0440\u043E\u0435\u043A\u0442 \u0417\u0430\u043A\u043E\u043D\u0443 \u043F\u0440\u043E \u0432\u043D\u0435\u0441\u0435\u043D\u043D\u044F \u0437\u043C\u0456\u043D \u0434\u043E \u0434\u0435\u044F\u043A\u0438\u0445 \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0447\u0438\u0445 \u0430\u043A\u0442\u0456\u0432 \u0423\u043A\u0440\u0430\u0457\u043D\u0438 \u0449\u043E\u0434\u043E \u043E\u043A\u0440\u0435\u043C\u0438\u0445 \u043F\u0438\u0442\u0430\u043D\u044C \u043F\u0440\u043E\u0445\u043E\u0434\u0436\u0435\u043D\u043D\u044F \u0432\u0456\u0439\u0441\u044C\u043A\u043E\u0432\u043E\u0457 \u0441\u043B\u0443\u0436\u0431\u0438, \u043C\u043E\u0431\u0456\u043B\u0456\u0437\u0430\u0446\u0456\u0457 \u0442\u0430 \u0432\u0456\u0439\u0441\u044C\u043A\u043E\u0432\u043E\u0433\u043E \u043E\u0431\u043B\u0456\u043A\u0443",
      "ExecutedDateTime": "2024-02-15T08:57:46.166816+01:00"
    },
    {
      "Query": "\u0413\u043E\u0442\u0443\u0454\u0442\u044C\u0441\u044F \u043D\u0430 \u0434\u0440\u0443\u0433\u0435 \u0447\u0438\u0442\u0430\u043D\u043D\u044F",
      "ExecutedDateTime": "2024-02-15T09:05:41.6950781+01:00"
    },
    {
      "Query": "\u043A\u043E\u043B\u0438 \u0437\u0430\u043A\u043E\u043D\u043E\u043F\u0440\u043E\u0435\u043A\u0442 \u0441\u0442\u0430\u0454 \u0437\u0430\u043A\u043E\u043D\u043E\u043C",
      "ExecutedDateTime": "2024-02-15T09:07:33.85335+01:00"
    },
    {
      "Query": "\u0420\u041D\u041E\u041A\u041F\u041F",
      "ExecutedDateTime": "2024-02-15T09:15:13.0450371+01:00"
    },
    {
      "Query": "markdown limit",
      "ExecutedDateTime": "2024-02-15T09:35:20.0961805+01:00"
    },
    {
      "Query": "b 1",
      "ExecutedDateTime": "2024-02-15T09:50:02.1752253+01:00"
    },
    {
      "Query": "ed",
      "ExecutedDateTime": "2024-02-15T11:31:43.0743117+01:00"
    },
    {
      "Query": "inte",
      "ExecutedDateTime": "2024-02-15T11:32:40.2552561+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-02-15T11:32:46.8496355+01:00"
    },
    {
      "Query": "intell",
      "ExecutedDateTime": "2024-02-15T11:32:49.2559467+01:00"
    },
    {
      "Query": "compile time vs runtime",
      "ExecutedDateTime": "2024-02-15T12:13:04.6362995+01:00"
    },
    {
      "Query": "shut",
      "ExecutedDateTime": "2024-02-15T12:28:41.5552495+01:00"
    },
    {
      "Query": "webmail mersebur",
      "ExecutedDateTime": "2024-02-16T14:01:32.5820573+01:00"
    },
    {
      "Query": "dr fischer",
      "ExecutedDateTime": "2024-02-16T14:15:45.866519+01:00"
    },
    {
      "Query": "disc",
      "ExecutedDateTime": "2024-02-19T09:16:04.2680445+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-02-19T17:49:32.903603+01:00"
    },
    {
      "Query": "notin",
      "ExecutedDateTime": "2024-02-19T17:49:37.531292+01:00"
    },
    {
      "Query": "dis",
      "ExecutedDateTime": "2024-02-19T18:05:13.7316299+01:00"
    },
    {
      "Query": "disc",
      "ExecutedDateTime": "2024-02-19T18:08:23.9190682+01:00"
    },
    {
      "Query": "ed",
      "ExecutedDateTime": "2024-02-19T20:37:48.1832592+01:00"
    },
    {
      "Query": "noti",
      "ExecutedDateTime": "2024-02-20T20:52:48.9604695+01:00"
    },
    {
      "Query": "di",
      "ExecutedDateTime": "2024-02-21T14:31:56.929961+01:00"
    },
    {
      "Query": "disc",
      "ExecutedDateTime": "2024-02-21T14:32:56.9561259+01:00"
    },
    {
      "Query": "netf",
      "ExecutedDateTime": "2024-02-21T17:46:46.0505915+01:00"
    },
    {
      "Query": "ed",
      "ExecutedDateTime": "2024-02-22T10:41:53.6584219+01:00"
    },
    {
      "Query": "} a",
      "ExecutedDateTime": "2024-02-22T15:34:02.0679167+01:00"
    },
    {
      "Query": "di",
      "ExecutedDateTime": "2024-02-23T18:02:35.0127555+01:00"
    },
    {
      "Query": "dis",
      "ExecutedDateTime": "2024-02-24T22:58:39.4396309+01:00"
    },
    {
      "Query": "relo",
      "ExecutedDateTime": "2024-02-24T22:58:56.5892885+01:00"
    },
    {
      "Query": "dis",
      "ExecutedDateTime": "2024-02-24T22:59:00.6481969+01:00"
    },
    {
      "Query": "edge\\",
      "ExecutedDateTime": "2024-02-24T23:13:36.3292686+01:00"
    },
    {
      "Query": "ed",
      "ExecutedDateTime": "2024-03-04T20:29:28.7270691+01:00"
    },
    {
      "Query": "dis",
      "ExecutedDateTime": "2024-03-10T23:13:39.0858658+01:00"
    },
    {
      "Query": "steam",
      "ExecutedDateTime": "2024-03-10T23:14:55.7827441+01:00"
    },
    {
      "Query": "rest",
      "ExecutedDateTime": "2024-03-11T10:14:45.4118814+01:00"
    },
    {
      "Query": "sett",
      "ExecutedDateTime": "2024-03-11T12:52:49.0445241+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-03-11T12:55:08.7644348+01:00"
    },
    {
      "Query": "sett",
      "ExecutedDateTime": "2024-03-11T12:55:29.3927847+01:00"
    },
    {
      "Query": "gitignore any folder",
      "ExecutedDateTime": "2024-03-11T12:56:20.1730804+01:00"
    },
    {
      "Query": "term",
      "ExecutedDateTime": "2024-03-11T13:06:17.513154+01:00"
    },
    {
      "Query": "ter",
      "ExecutedDateTime": "2024-03-11T13:07:25.1030549+01:00"
    },
    {
      "Query": "sett",
      "ExecutedDateTime": "2024-03-11T13:16:31.9254259+01:00"
    },
    {
      "Query": "set",
      "ExecutedDateTime": "2024-03-11T13:16:46.4905067+01:00"
    },
    {
      "Query": "sett",
      "ExecutedDateTime": "2024-03-11T13:17:32.1343067+01:00"
    },
    {
      "Query": "hallo",
      "ExecutedDateTime": "2024-03-11T13:18:25.4832465+01:00"
    },
    {
      "Query": "chrom",
      "ExecutedDateTime": "2024-03-11T13:18:32.6039288+01:00"
    },
    {
      "Query": "hallo",
      "ExecutedDateTime": "2024-03-11T13:18:43.3805757+01:00"
    },
    {
      "Query": "hall",
      "ExecutedDateTime": "2024-03-11T13:21:46.2240674+01:00"
    },
    {
      "Query": "chrome",
      "ExecutedDateTime": "2024-03-11T13:21:52.1933061+01:00"
    },
    {
      "Query": "reload",
      "ExecutedDateTime": "2024-03-11T13:23:19.0119494+01:00"
    },
    {
      "Query": "google",
      "ExecutedDateTime": "2024-03-11T13:23:20.9081469+01:00"
    },
    {
      "Query": "hallo",
      "ExecutedDateTime": "2024-03-11T13:23:24.1576413+01:00"
    },
    {
      "Query": "last chrome version",
      "ExecutedDateTime": "2024-03-11T13:25:19.1511075+01:00"
    },
    {
      "Query": "bing",
      "ExecutedDateTime": "2024-03-11T13:25:48.1812236+01:00"
    }
  ]
}
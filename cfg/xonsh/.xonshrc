# XONSH WIZARD START
xontrib load coreutils
xontrib load pipeliner

$ALIAS_COMPLETIONS_OPTIONS_BY_DEFAULT = '1'
$COMPLETION_MODE = 'menu-complete'
# XONSH WIZARD END

# MISE HOOK
from os               import environ
import subprocess
from xonsh.built_ins  import XSH

def listen_prompt(): # Hook Events
  execx($(/home/coden/.local/bin/mise hook-env -s xonsh))

envx = XSH.env
envx[   'MISE_SHELL'] = 'xonsh'
environ['MISE_SHELL'] = envx.get_detyped('MISE_SHELL')
XSH.builtins.events.on_pre_prompt(listen_prompt) # Activate hook: before showing the prompt

def _mise(args):
  # changed ['command', 'mise', *args] to ['/home/coden/.local/bin/mise', *args], since there is 
  # no 'command' command in xonsh
  if args and args[0] in ('deactivate', 'shell', 'sh'):
    execx(subprocess.run(['/home/coden/.local/bin/mise', *args], stdout=subprocess.PIPE).stdout.decode())
  else:
    subprocess.run(['/home/coden/.local/bin/mise', *args])

XSH.aliases['mise'] = _mise
# MISE HOOK END

# FUNCTIONS
def aptrep(*repos):
    for repo in repos:
        print(f"Installing {repo}")
        sudo add-apt-repository @(repo) -y
    sudo apt-get update


# ALIASES
XSH.aliases['apti'] = 'sudo apt-get install -y @($args)'
XSH.aliases['aptr'] = 'sudo apt-get remove -y @($args)'
XSH.aliases['aptp'] = 'sudo apt-get purge @($args)'
XSH.aliases['aptu'] = 'sudo apt-get update'
XSH.aliases['aptl'] = 'apt list | grep @($args)'
XSH.aliases['aptli'] = 'apt list --installed | grep @($args)'